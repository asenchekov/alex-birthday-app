{"version":3,"sources":["cake_logo.svg","background.jpg","fireworks-background.gif","App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","today","setToday","useEffect","interval","setInterval","clearInterval","thisYear","getFullYear","nextYear","birthayDate","daysLeft","Math","floor","hoursLeft","notYet","header","className","style","background","fireworks","backgroundSize","backgroundColor","src","logo","alt","title","width","height","frameborder","allowfullscreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,iD,MC0E1BA,MApEf,WAAgB,IAAD,EACaC,mBAAS,IAAIC,MAD1B,mBACNC,EADM,KACCC,EADD,KAGbC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,EAAS,IAAIF,QACZ,KAEH,OAAO,kBAAMM,cAAcF,OAG7B,IAAMG,GAAW,IAAIP,MAAOQ,cAAgB,GACtCC,GAAW,IAAIT,MAAOQ,cAAgB,EAAI,GAC1CE,EACJ,IAAIV,KAAJ,UAAYO,EAAZ,WAAgCN,EAC5B,IAAID,KAAJ,UAAYS,EAAZ,WACA,IAAIT,KAAJ,UAAYO,EAAZ,WAEAI,EAAWC,KAAKC,OAAOH,EAAcT,GAAS,IAAO,GAAK,GAAK,IAC/Da,EAAYF,KAAKC,OAAOH,EAAcT,GAAS,IAAO,GAAK,IAC3Dc,GAAUL,EAAcT,GAAS,IAAO,GAAK,GAAK,GAElDe,EACJD,EAAS,EACP,qCACGJ,EACC,+BACGA,EADH,IAC2B,IAAbA,EAAiB,OAAS,SAGxC,4CACaG,EAAY,EADzB,IAC2C,IAAdA,EAAkB,QAAU,UAG3D,oEAGF,uDAGJ,OACE,qBAAKG,UAAU,MAAf,SACE,yBACEA,UAAU,aACVC,MAAO,CACLC,WAAW,wBAAD,OACRJ,EAAS,EAAII,EAAaC,EADlB,KAGVC,eAAgB,QAChBC,gBAAiB,WAPrB,UAUE,qBAAKC,IAAKC,EAAMP,UAAU,WAAWQ,IAAI,SACzC,wBACEC,MAAM,SACNC,MAAM,MACNC,OAAO,MACPL,IAAI,2EACJM,YAAY,IACZC,iBAAe,IAGhBd,QCxDMe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.73151a27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cake_logo.2e8ca27d.svg\";","export default __webpack_public_path__ + \"static/media/background.94c41406.jpg\";","export default __webpack_public_path__ + \"static/media/fireworks-background.2a0936f4.gif\";","import { useState, useEffect } from \"react\";\nimport logo from \"./cake_logo.svg\";\nimport background from \"./background.jpg\";\nimport fireworks from \"./fireworks-background.gif\";\nimport \"./App.css\";\n\nfunction App() {\n  const [today, setToday] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setToday(new Date());\n    }, 5000);\n\n    return () => clearInterval(interval);\n  });\n\n  const thisYear = new Date().getFullYear() + \"\";\n  const nextYear = new Date().getFullYear() + 1 + \"\";\n  const birthayDate =\n    new Date(`${thisYear}-01-15`) < today\n      ? new Date(`${nextYear}-01-15`)\n      : new Date(`${thisYear}-01-15`);\n\n  const daysLeft = Math.floor((birthayDate - today) / 1000 / 60 / 60 / 24);\n  const hoursLeft = Math.floor((birthayDate - today) / 1000 / 60 / 60);\n  const notYet = (birthayDate - today) / 1000 / 60 / 60 / 24;\n\n  const header =\n    notYet > 0 ? (\n      <>\n        {daysLeft ? (\n          <h1>\n            {daysLeft} {daysLeft !== 1 ? \"Days\" : \"Day\"}\n          </h1>\n        ) : (\n          <h1>\n            Less than {hoursLeft + 1} {hoursLeft !== 1 ? \"Hours\" : \"Hour\"}\n          </h1>\n        )}\n        <h3>left to Alex Chekova's Birthday</h3>\n      </>\n    ) : (\n      <h1>It's your Birthday!!!</h1>\n    );\n\n  return (\n    <div className=\"App\">\n      <header\n        className=\"App-header\"\n        style={{\n          background: `center no-repeat url(${\n            notYet > 0 ? background : fireworks\n          })`,\n          backgroundSize: \"cover\",\n          backgroundColor: \"#282c34\",\n        }}\n      >\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <iframe\n          title=\"unique\"\n          width=\"560\"\n          height=\"320\"\n          src=\"https://musiclab.chromeexperiments.com/Song-Maker/embed/6118495637471232\"\n          frameborder=\"0\"\n          allowfullscreen\n        />\n\n        {header}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}