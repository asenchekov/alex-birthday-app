{"version":3,"sources":["cake_logo.svg","background.jpg","fireworks-background.gif","App.js","reportWebVitals.js","index.js"],"names":["App","birthayDate","Date","useState","today","setToday","useEffect","interval","setInterval","clearInterval","daysLeft","Math","floor","hoursLeft","notYet","header","className","style","background","fireworks","backgroundSize","backgroundColor","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,iD,MCkD1BA,MA5Cf,WACE,IAAMC,EAAc,IAAIC,KAAK,cADhB,EAGeC,mBAAS,IAAID,MAH5B,mBAGLE,EAHK,KAGEC,EAHF,KAKbC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,EAAS,IAAIH,QACZ,KAEH,OAAO,kBAAMO,cAAcF,OAG7B,IAAMG,EAAWC,KAAKC,OAAOX,EAAcG,GAAS,IAAO,GAAK,GAAK,IAC/DS,EAAYF,KAAKC,OAAOX,EAAcG,GAAS,IAAO,GAAK,IAC3DU,GAAUb,EAAcG,GAAS,IAAO,GAAK,GAAK,GAElDW,EAASD,EAAS,EAEpB,qCACGJ,EACG,+BAAKA,EAAL,IAA6B,IAAbA,EAAiB,OAAS,SAC1C,+BAAKG,EAAL,IAA+B,IAAdA,EAAkB,QAAU,UACjD,yEAGF,uDAEJ,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAChBC,MAAO,CACLC,WAAW,wBAAD,OAA0BJ,EAAS,EAAII,EAAaC,EAApD,KACVC,eAAgB,QAChBC,gBAAiB,WAJrB,UAOE,qBAAKC,IAAKC,EAAMP,UAAU,WAAWQ,IAAI,SACxCT,QChCMU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb2d06c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cake_logo.2e8ca27d.svg\";","export default __webpack_public_path__ + \"static/media/background.94c41406.jpg\";","export default __webpack_public_path__ + \"static/media/fireworks-background.2a0936f4.gif\";","import { useState, useEffect } from 'react';\nimport logo from './cake_logo.svg';\nimport background from './background.jpg';\nimport fireworks from './fireworks-background.gif';\nimport './App.css';\n\nfunction App() {\n  const birthayDate = new Date('2021-01-15');\n\n  const [ today, setToday ] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setToday(new Date())\n    }, 5000);\n\n    return () => clearInterval(interval);\n  });\n\n  const daysLeft = Math.floor((birthayDate - today) / 1000 / 60 / 60 / 24);\n  const hoursLeft = Math.floor((birthayDate - today) / 1000 / 60 / 60);\n  const notYet = (birthayDate - today) / 1000 / 60 / 60 / 24;\n\n  const header = notYet > 0\n    ? (\n      <>\n        {daysLeft\n          ? <h1>{daysLeft} {daysLeft !== 1 ? 'Days' : 'Day'}</h1>\n          : <h1>{hoursLeft} {hoursLeft !== 1 ? 'Hours' : 'Hour'}</h1>}\n        <h3>left to Alexandra Chekova's Birthday</h3>\n      </>\n    )\n    : <h1>It's your Birthday!!!</h1>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"\n        style={{\n          background: `center no-repeat url(${notYet > 0 ? background : fireworks})`,\n          backgroundSize: 'cover',\n          backgroundColor: '#282c34',\n        }}\n      >\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {header}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}